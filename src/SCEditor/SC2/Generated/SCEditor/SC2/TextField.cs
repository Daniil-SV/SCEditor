// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SCEditor.SC2
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct TextField : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public TextField __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort Id { get { return __p.bb.GetUshort(__p.bb_pos + 0); } }
  public ushort Unk1 { get { return __p.bb.GetUshort(__p.bb_pos + 2); } }
  public uint FontNameRefId { get { return __p.bb.GetUint(__p.bb_pos + 4); } }
  public short Left { get { return __p.bb.GetShort(__p.bb_pos + 8); } }
  public short Top { get { return __p.bb.GetShort(__p.bb_pos + 10); } }
  public short Right { get { return __p.bb.GetShort(__p.bb_pos + 12); } }
  public short Bottom { get { return __p.bb.GetShort(__p.bb_pos + 14); } }
  public uint FontColor { get { return __p.bb.GetUint(__p.bb_pos + 16); } }
  public uint OutlineColor { get { return __p.bb.GetUint(__p.bb_pos + 20); } }
  public uint TextRefId { get { return __p.bb.GetUint(__p.bb_pos + 24); } }
  public uint Unk2 { get { return __p.bb.GetUint(__p.bb_pos + 28); } }
  public byte Styles { get { return __p.bb.Get(__p.bb_pos + 32); } }
  public byte Align { get { return __p.bb.Get(__p.bb_pos + 33); } }
  public byte FontSize { get { return __p.bb.Get(__p.bb_pos + 34); } }
  public byte Unk3 { get { return __p.bb.Get(__p.bb_pos + 35); } }
  public uint Unk4 { get { return __p.bb.GetUint(__p.bb_pos + 36); } }

  public static Offset<SCEditor.SC2.TextField> CreateTextField(FlatBufferBuilder builder, ushort Id, ushort Unk1, uint FontNameRefId, short Left, short Top, short Right, short Bottom, uint FontColor, uint OutlineColor, uint TextRefId, uint Unk2, byte Styles, byte Align, byte FontSize, byte Unk3, uint Unk4) {
    builder.Prep(4, 40);
    builder.PutUint(Unk4);
    builder.PutByte(Unk3);
    builder.PutByte(FontSize);
    builder.PutByte(Align);
    builder.PutByte(Styles);
    builder.PutUint(Unk2);
    builder.PutUint(TextRefId);
    builder.PutUint(OutlineColor);
    builder.PutUint(FontColor);
    builder.PutShort(Bottom);
    builder.PutShort(Right);
    builder.PutShort(Top);
    builder.PutShort(Left);
    builder.PutUint(FontNameRefId);
    builder.PutUshort(Unk1);
    builder.PutUshort(Id);
    return new Offset<SCEditor.SC2.TextField>(builder.Offset);
  }
}


}
